--- drivers/net/wireless/bcmdhd_4335/wl_android.c	2013-06-24 02:50:44.000000000 -0600
+++ drivers/net/wireless/bcmdhd_4335/wl_android.c	2013-08-01 23:38:00.000000000 -0600
@@ -547,19 +547,20 @@
 	return bytes_written;
 }
 
-#define TRAFFIC_SUPER_HIGH_WATER_MARK	2600*(3000/1000)
-#define TRAFFIC_HIGH_WATER_MARK			2300*(3000/1000)
-#define TRAFFIC_LOW_WATER_MARK			256*(3000/1000)
+#define TRAFFIC_SUPER_HIGH_WATER_MARK	2600
+#define TRAFFIC_HIGH_WATER_MARK			2300
+#define TRAFFIC_LOW_WATER_MARK			256
 typedef enum traffic_ind {
 	TRAFFIC_STATS_NORMAL = 0,
 	TRAFFIC_STATS_HIGH,
 	TRAFFIC_STATS_SUPER_HIGH,
 } traffic_ind_t;
 
-
+static int screen_off = 0;
 static int traffic_stats_flag = TRAFFIC_STATS_NORMAL;
 static unsigned long current_traffic_count = 0;
 static unsigned long last_traffic_count = 0;
+static unsigned long last_traffic_count_jiffies = 0;
 
 #ifdef CONFIG_PERFLOCK
 #include <mach/perflock.h>
@@ -658,23 +659,38 @@
 	unsigned long rx_packets_count = 0;
 	unsigned long tx_packets_count = 0;
 	unsigned long traffic_diff = 0;
+    unsigned long jiffies_diff = 0;
 
 	
 	dhd_get_txrx_stats(dev, &rx_packets_count, &tx_packets_count);
 	current_traffic_count = rx_packets_count + tx_packets_count;
 
-	if (current_traffic_count >= last_traffic_count) {
-		traffic_diff = current_traffic_count - last_traffic_count;
+	if ((current_traffic_count >= last_traffic_count && (jiffies - last_traffic_count_jiffies) >= 3*HZ) || screen_off) {
+        
+        if (screen_off) {
+            printf("set traffic = 0 and relase performace lock when screen off");
+            traffic_diff = 0;
+        }
+        else {
+        
+            jiffies_diff = jiffies - last_traffic_count_jiffies;
+            if (jiffies_diff < 7*HZ) {
+                traffic_diff = (current_traffic_count - last_traffic_count) / jiffies_diff * HZ;
+            }
+            else {
+                traffic_diff = 0;
+            }
+        }
         switch (traffic_stats_flag) {
         case TRAFFIC_STATS_NORMAL:
 			if (traffic_diff > TRAFFIC_HIGH_WATER_MARK) {
 				traffic_stats_flag = TRAFFIC_STATS_HIGH;
 				wlan_lock_perf();
-				printf("lock cpu here, traffic-count=%ld\n", traffic_diff / 3);
+				printf("lock cpu here, traffic-count=%ld\n", traffic_diff);
                 if (traffic_diff > TRAFFIC_SUPER_HIGH_WATER_MARK) {
                     traffic_stats_flag = TRAFFIC_STATS_SUPER_HIGH;
                     wlan_lock_multi_core(dev);
-                    printf("lock 2nd cpu here, traffic-count=%ld\n", traffic_diff / 3);
+                    printf("lock 2nd cpu here, traffic-count=%ld\n", traffic_diff);
                 }
 			}
             break;
@@ -682,23 +698,23 @@
             if (traffic_diff > TRAFFIC_SUPER_HIGH_WATER_MARK) {
                 traffic_stats_flag = TRAFFIC_STATS_SUPER_HIGH;
                 wlan_lock_multi_core(dev);
-				printf("lock 2nd cpu here, traffic-count=%ld\n", traffic_diff / 3);
+				printf("lock 2nd cpu here, traffic-count=%ld\n", traffic_diff);
             }
             else if (traffic_diff < TRAFFIC_LOW_WATER_MARK) {
 				traffic_stats_flag = TRAFFIC_STATS_NORMAL;
 				wlan_unlock_perf();
-				printf("unlock cpu here, traffic-count=%ld\n", traffic_diff / 3);
+				printf("unlock cpu here, traffic-count=%ld\n", traffic_diff);
 			}
             break;
         case TRAFFIC_STATS_SUPER_HIGH:
 			if (traffic_diff < TRAFFIC_SUPER_HIGH_WATER_MARK) {
                 traffic_stats_flag = TRAFFIC_STATS_HIGH;
                 wlan_unlock_multi_core(dev);
-				printf("unlock 2nd cpu here, traffic-count=%ld\n", traffic_diff / 3);
+				printf("unlock 2nd cpu here, traffic-count=%ld\n", traffic_diff);
                 if (traffic_diff < TRAFFIC_LOW_WATER_MARK) {
                     traffic_stats_flag = TRAFFIC_STATS_NORMAL;
                     wlan_unlock_perf();
-                    printf("unlock cpu here, traffic-count=%ld\n", traffic_diff / 3);
+                    printf("unlock cpu here, traffic-count=%ld\n", traffic_diff);
                 }
             }
             break;
@@ -706,6 +722,7 @@
             break;
         }
 	}
+    last_traffic_count_jiffies = jiffies;
 	last_traffic_count = current_traffic_count;
 	
 }
