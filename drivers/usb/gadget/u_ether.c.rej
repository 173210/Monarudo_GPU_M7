--- drivers/usb/gadget/u_ether.c	2013-06-24 02:50:44.000000000 -0600
+++ drivers/usb/gadget/u_ether.c	2013-08-01 23:38:00.000000000 -0600
@@ -61,7 +61,6 @@
 #define RX_EXTRA	20	
 
 #define DEFAULT_QLEN	2	
-#define ETH_FRAME_LEN_MAX       9000
 
 #ifdef CONFIG_USB_GADGET_DUALSPEED
 
@@ -84,6 +83,7 @@
 
 
 
+#ifdef DEBUG
 #undef DBG
 #undef VDBG
 #undef ERROR
@@ -112,6 +112,7 @@
 	xprintk(dev , KERN_ERR , fmt , ## args)
 #define INFO(dev, fmt, args...) \
 	xprintk(dev , KERN_INFO , fmt , ## args)
+#endif 
 
 static struct eth_dev *the_dev;
 
@@ -125,8 +126,8 @@
 	int     iMaxMtuSet = ETH_FRAME_LEN;
 
 	if (the_dev) {
-        if (the_dev->miMaxMtu == ETH_FRAME_LEN_MAX)
-            iMaxMtuSet = ETH_FRAME_LEN_MAX;
+        if (the_dev->miMaxMtu == ETH_FRAME_LEN_MAX - ETH_HLEN)
+            iMaxMtuSet = ETH_FRAME_LEN_MAX - ETH_HLEN;
 	}
 
 	
@@ -388,14 +389,20 @@
 	struct eth_dev	*dev = container_of(work, struct eth_dev, rx_work);
 	struct sk_buff	*skb;
 	int		status = 0;
+	unsigned int uiCurMtu = 0;
 
 	if (!dev->port_usb)
 		return;
 
+	uiCurMtu = dev->net->mtu + ETH_HLEN;
+	if ((uiCurMtu <= ETH_HLEN) || (uiCurMtu > ETH_FRAME_LEN_MAX))
+	    uiCurMtu = ETH_FRAME_LEN;
+
 	while ((skb = skb_dequeue(&dev->rx_frames))) {
 		if (status < 0
 				|| ETH_HLEN > skb->len
-				|| skb->len > ETH_FRAME_LEN) {
+			
+			    || skb->len > uiCurMtu) {
 			dev->net->stats.rx_errors++;
 			dev->net->stats.rx_length_errors++;
 			DBG(dev, "rx length %d\n", skb->len);
@@ -728,8 +735,8 @@
 		memcpy(ethaddr, the_dev->host_mac, ETH_ALEN);
         if (g) {
             the_dev->miMaxMtu = g->miMaxMtu;
-            if (the_dev->miMaxMtu == ETH_FRAME_LEN_MAX)
-                the_dev->net->mtu = ETH_FRAME_LEN_MAX;
+            if (the_dev->miMaxMtu == ETH_FRAME_LEN_MAX - ETH_HLEN)
+                the_dev->net->mtu = ETH_FRAME_LEN_MAX - ETH_HLEN;
         }
 		return 0;
 	}
@@ -781,8 +788,8 @@
 		the_dev = dev;
         if (g) {
             the_dev->miMaxMtu = g->miMaxMtu;
-            if (the_dev->miMaxMtu == ETH_FRAME_LEN_MAX)
-                the_dev->net->mtu = ETH_FRAME_LEN_MAX;
+            if (the_dev->miMaxMtu == ETH_FRAME_LEN_MAX - ETH_HLEN)
+                the_dev->net->mtu = ETH_FRAME_LEN_MAX - ETH_HLEN;
         }
 		netif_carrier_off(net);
 	}
@@ -802,6 +809,12 @@
 	the_dev = NULL;
 }
 
+int gether_change_mtu(int new_mtu)
+{
+struct eth_dev *dev = the_dev;
+
+    return ueth_change_mtu(dev->net, new_mtu);
+}
 
 /**
  * gether_connect - notify network layer that USB link is active
